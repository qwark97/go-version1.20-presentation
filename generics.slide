# Go 1.20
Introduction to the newest language version

Marcin Plata
24 March 2023

marcin.plata@softwaremind.com

:   * today we'll talk about the newest golang version which is go 1.20
:   * this presentation will be a bit shorter than usually but from time to time it should be refreshing to have a shorter meet up
:   * I hope that this talk will be a first one from a series that will go through a new golang versions each time when those are being released
:   * so let's get started

## Agenda
- Golang versioning overview
- Biggest features of v1.20
- Other modifications

:   * firstly we'll talk about how the go language manages the versions
:   * we'll say what is the schedule and how the process looks like

:   * 
:   * then we'll talk about the biggest - in my opinion - features that the go 1.20 brings to the table

:   *
:   * and at the end, we'll mention some other, less significant changes

:   * 
:   * in order to make it as useful as possible each important change will have some code examples
:   *

.image images/gopher.png 300 300

## But...
<br />
<br />
<br />
<br />
<br />
<br />
<br />


&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; HOW TO GET THE NEW VERSION?

:   * first things first
:   * for those less familiar with the Go short reminder how to get new version

## Short reminder

How to use newer version

Official instructions

:   * you can follow official guildline
:   * it's rather simple operation
:   * of course there are differents steps depending on the OS you're using
:   * just type "golang install" in google and it should be the first link

.image images/official_instructions.png 500 500


## Short reminder

How to use newer version

IDE support

:   * you can use IDE in order to help yourself to switch to another version
:   * for example in vs code, when you have a go file opened, you can click on version in the bottom left corner
:   * then the pop up will come up where you can click "Choose Go environment"
:   * and then, as you can see on the slide, you can download or choose already downloaded go version

.image images/ide_instructions.png 500 900

## Short reminder

How to use newer version

Docker image

<zdjęcie z docker hub'a>

:   * last but not least is the docker image
:   * it's convinient way to use different go versions
:   * although, in order to use it efficiently, probably some docker experience is needed

## Go versioning

<zdjęcie ze strony go z release policy>

:   * alright, we have the newest go version
:   * before we dive in into the interesting features 
:   * let's say a few words about the Go language releases policy
:   *
:   * the go team goal is to release the new major every six months 
:   * for the 3 months there is a stage of developing the features 
:   * then, for the next 3 months is the stage of "release freeze" when no new features are being added 
:   * the team then focuses on testing, polishing the features and fixing the bugs
:   *
:   * apart from that, life cycle of the version involves releasing some critical or security fixes
:   *
:   * the go team supports three latest versions with mentioned fixes
:   *
:   * some versions introduce more changes, some are less revolutionary
:   * for example version 1.18 was a big deal because it introduced the generics
:   * what is worth mentioning, all versions are backward compatible


## Go 1.20

<br />
<br />
<br />
<br />
<br />

* Multi errors
* "comparable" expansion
* Slice ---> list
* Context verbosity
* Binary with -cover flag

:   * so, let's finally talk about the today's subject - the go version 1.20
:   * it has been released the first february, this year.
:   * it's rather less spectacular version
:   * but it doesn't mean it is not offering anything interesting
:   *
:   * the features of the newest Go version that I want to show you today are
:   * --- 1) Multi errors
:   * --- 2) Expansion of the comparable type
:   * --- 3) Possibility to transform slice to list
:   * --- 4) The increase in the context verbosity
:   * --- 5) The cover tool now can collect coverage profiles of whole programs, not just of unit tests.


## Multi errors

## "comparable" expansion

## Slice ---> list

## Context verbosity

## Binary with -cover flag

// pokazac coverage np servera http, jesli uda się zrobić takie "stopniowane" coverage - wtedy mozna by zobaczyc wykorzystanie poszczegolnych fragmentow kodu

## Other modifications

// z dodatkowych, mniej znaczących zmian mamy:
// - Experimental memory arenas
// - http.ResponseController (?)
// - math.Rand zaczął być randomowy domyślnie (sam seeduje)
// - The language specification now defines the exact order in which array elements and struct fields are compared.
// - The new time layout constants DateTime, DateOnly, and TimeOnly provide names for three of the most common layout strings used in a survey of public Go source code.

see https://go.dev/doc/go1.20#go-command for more

## Next release

// następna wersja będzie gdzies w okolicach XYZ
// teraz zachęcam do używania nowej wersji go
// podbijanie wersji w go nie jest problematyczne
// a im czesciej będziemy to robić tym mniej potencjalnych problemów
// takze jedna rzecz, którą chciałbym żebyście wynieśli z tej prezentacji to zaktualizujcie wersje w projektach w których pracujecie do 1.20

:   * and that's all what I've prepared for today
:   * thank you for your time, I hope you liked it
:   * if you have any questions feel free to ask now or later, either on guild chat or directly to me
:   * ...
:   * alright, so that's it for today, have a good Firday